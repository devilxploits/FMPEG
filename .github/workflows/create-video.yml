name: üé¨ Create Video

on:
  repository_dispatch:
    types: [create_video]

jobs:
  create-video:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash

    steps:
      - name: üßæ Checkout repository
        uses: actions/checkout@v4

      - name: üõ†Ô∏è Install FFmpeg
        run: |
          echo "üõ†Ô∏è Installing FFmpeg..."
          sudo apt-get update -y
          sudo apt-get install -y ffmpeg jq curl
          ffmpeg -version

      - name: üì¶ Prepare assets from payload
        run: |
          set -euo pipefail
          mkdir -p assets output /tmp

          echo "================================================"
          echo "üé¨ VIDEO CREATION STARTING"
          echo "================================================"

          echo '${{ toJson(github.event.client_payload.images) }}' > /tmp/images.json

          idx=0
          while IFS= read -r image_url; do
            if [ -n "$image_url" ] && [ "$image_url" != "null" ]; then
              outfile="assets/image_$(printf '%03d' "$idx").png"
              echo "üì• Downloading image $((idx + 1)): $image_url"
              curl -L --fail --retry 3 -o "$outfile" "$image_url"
              idx=$((idx + 1))
            fi
          done < <(jq -r '.[]?' /tmp/images.json)

          echo "üìä Total images: $idx"
          ls -lh assets/

          if [ -n "${{ github.event.client_payload.voiceover_url || '' }}" ]; then
            echo "üé§ Downloading voiceover..."
            curl -L -o assets/voiceover.mp3 "${{ github.event.client_payload.voiceover_url }}"
          fi

          if [ -n "${{ github.event.client_payload.background_music_url || '' }}" ]; then
            echo "üéµ Downloading background music..."
            curl -L -o assets/bgmusic.mp3 "${{ github.event.client_payload.background_music_url }}"
          fi

      - name: üéûÔ∏è Create video with FFmpeg
        run: |
          set -euo pipefail
          
          DURATION=${{ github.event.client_payload.duration || 30 }}
          OUTPUT_NAME=${{ github.event.client_payload.output_name || 'output.mp4' }}

          echo "üìè Fixing image dimensions (even width/height required by H.264)"
          mkdir -p fixed
          for img in assets/image_*.png; do
            ffmpeg -y -i "$img" -vf "scale=trunc(iw/2)*2:trunc(ih/2)*2" "fixed/$(basename "$img")"
          done
          
          cd fixed
          IMG_COUNT=$(ls -1 image_*.png 2>/dev/null | wc -l)
          if [ "$IMG_COUNT" -eq 0 ]; then
            echo "‚ùå No images found"
            exit 1
          fi

          echo "üé¨ Creating video from $IMG_COUNT frames..."
          ffmpeg -y -framerate 1 -pattern_type glob -i "image_*.png" \
                 -c:v libx264 -pix_fmt yuv420p -r 30 ../output/temp.mp4

          cd ../output

          if [ -f ../assets/voiceover.mp3 ]; then
            echo "üéß Adding voiceover..."
            ffmpeg -y -i temp.mp4 -i ../assets/voiceover.mp3 -c:v copy -c:a aac -shortest temp_voice.mp4
            mv temp_voice.mp4 temp.mp4
          fi

          if [ -f ../assets/bgmusic.mp3 ]; then
            echo "üéº Mixing background music..."
            ffmpeg -y -i temp.mp4 -i ../assets/bgmusic.mp3 \
              -filter_complex "[1:a]volume=0.4[a];[0:a][a]amix=inputs=2:duration=first" \
              -c:v copy -c:a aac "$OUTPUT_NAME"
          else
            mv temp.mp4 "$OUTPUT_NAME"
          fi

          echo "‚úÖ Video created successfully: $OUTPUT_NAME"
          ls -lh

      - name: üì§ Upload video to backend
        if: success() && github.event.client_payload.callback_url != '' && github.event.client_payload.callback_url != null
        run: |
          echo "üì° Uploading video to callback URL..."
          curl -X POST "${{ github.event.client_payload.callback_url }}" \
               -F "video=@output/${{ github.event.client_payload.output_name || 'output.mp4' }}" \
               -F "status=success" \
               -F "webhook_secret=${{ secrets.WEBHOOK_SECRET }}"

      - name: üì¶ Upload artifact
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: final_video
          path: output/*.mp4
          retention-days: 7
